olist_orders_dataset,
by = c("order_id")
)
evolucaoVendas <- products%%
inner_join(
olist_orders_dataset,
by = c("order_id")
)
evolucaoVendas <- products%%
full_join(
olist_orders_dataset,
by = c("order_id")
)
View(olist_orders_dataset)
View(products)
evolucaoVendas <- products%%
left_join(
olist_orders_dataset,
by = c("order_id")
)
evolucaoVendas <- products%%
full_join(
olist_orders_dataset,
by = c("order_id")
)
evolucaoVendas <- products%%
full_join(
olist_orders_dataset
#by = c("order_id")
)
evolucaoVendas <- products%%
full_join(
olist_orders_dataset
#by = c("order_id")
)
evolucaoVendas <- products%>%
full_join(
olist_orders_dataset,
by = c("order_id")
)
View(evolucaoVendas)
evolucaoVendas <- products%>%
full_join(
olist_orders_dataset %>%
dplyr::select(order_purchase_timestamp),
by = c("order_id")
)
evolucaoVendas <- products%>%
full_join(
olist_orders_dataset %>%
dplyr::select(order_id, order_purchase_timestamp),
by = c("order_id")
)
View(evolucaoVendas)
plot(evolucaoVendas)
barplot(evolucaoVendas$product_category_name)
plot(evolucaoVendas$product_category_name)
str(evolucaoVendas)
View(products)
products%%
group_by(product_category_name)%>%
summarise(f = n(), v = sum(price))%>%
filter(order_purchase_timestamp)
View(products)
products%%
group_by(products$product_category_name)%>%
summarise(f = n(), v = sum(products$price))%>%
filter(evolucaoVendas$order_purchase_timestamp)
test <- products%%
group_by(product_category_name)%>%
summarise(f = n(), v = sum(price))%>%
filter(order_purchase_timestamp)
library(dplyr)
test <- products%%
group_by(product_category_name)%>%
summarise(f = n(), v = sum(price))%>%
filter(order_purchase_timestamp)
test <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price))%>%
arrange(desc(frequencia))
test <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price))%>%
filter(order_purchase_timestamp)
test <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price))%>%
arrange(desc(frequencia))
category_frequency <- products %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = product_name_lenght)%>%
arrange(desc(frequencia))
View(category_frequency)
teste <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
View(evolucaoVendas)
View(teste)
<- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
# IMPORTAR
#setwd("~/Jupiter_Analytics/model")
library(dplyr)
library(priceR)
source("~/Jupiter_Analytics/model/datasetting.R", encoding = 'UTF-8')
category_frequency <- products %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price))%>%
arrange(desc(frequencia))
# PEGAR A FREQUÊNCIA DAS CATGORIAS E ORGANIZAR UMA TABELA POR PREÇO.
# JOIN ENTRE A TABLE_PRODUCT E TABLE_ITEMS
products <- olist_products_dataset %>%
inner_join(
olist_order_items_dataset,
by = c("product_id")
)
category_frequency <- products %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price))%>%
arrange(desc(frequencia))
evolucaoVendas <- products%>%
full_join(
olist_orders_dataset %>%
dplyr::select(order_id, order_purchase_timestamp),
by = c("order_id")
)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
View(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, tryFormats = c("%Y/%m/%d"))
str(vendasCategoria)
class(vendasCategoria)
str(vendasCategoria)
vendasCategoria <- as.data.frame(vendasCategoria)
class(vendasCategoria)
View(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, tryFormats = c("%Y/%m/%d"))
str(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data)
str(vendasCategoria)
View(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, Sys.getlocale("LC_COLLATE", "C"))
vendasCategoria$data <- as.Date(vendasCategoria$data, "%m/%d/%y")
str(vendasCategoria)
View(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, format = "%m/%d/%y")
vendasCategoria$data <- as.Date(vendasCategoria$data, format = "%m/%d/%Y")
str(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, format = "%d/%m/%Y")
str(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, format = "d/m/Y")
str(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, format = "d-m-Y")
str(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, format = "%m/%d/%Y")
str(vendasCategoria)
vendasCategoria$data <- as.Date.character(vendasCategoria$data, tryFormats = "%m/%d/%Y")
vendasCategoria$data <- as.Date(vendasCategoria$data, tryFormats = "%m/%d/%Y")
str(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, tryFormats = "%m/%d/%Y", optional = FALSE)
str(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, tryFormats = "%D/%m/%Y", optional = FALSE)
str(vendasCategoria)
vendasCategoria$data <- as.Date.character(vendasCategoria$data, format =  = "%m/%d/%Y")
vendasCategoria$data <- as.Date.character(vendasCategoria$data, format = "%m/%d/%Y")
View(vendasCategoria)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria$data <- as.Date.character(vendasCategoria$data, format = "%m/%d/%Y")
View(vendasCategoria)
View(vendasCategoria)
# DETERMINAR A CATEGORIA COM MELHOR DESEMPENHO DE VENDAS - APLICAR FILTRO DE DATA
# AS LOJAS PARCEIRAS COM MAIOR NÚMERO DE VENDAS E RECEITA
# AS REGIÕES QUE MAIS COMPRA. PLOTAGEM DE MAPAS
# IMPORTAR
#setwd("~/Jupiter_Analytics/model")
library(dplyr)
library(priceR)
# ORDER_ID
olist_orders_dataset <- read.csv("model/data/olist_orders_dataset.csv")
olist_order_reviews_dataset <- read.csv("model/data/olist_order_reviews_dataset.csv")
olist_order_payments_dataset <- read.csv("model/data/olist_order_payments_dataset.csv")
olist_customers_dataset <- read.csv("model/data/olist_customers_dataset.csv")
#
olist_order_items_dataset <- read.csv("model/data/olist_order_items_dataset.csv")
olist_products_dataset <- read.csv("model/data/olist_products_dataset.csv")
olist_sellers_dataset <- read.csv("model/data/olist_sellers_dataset.csv")
olist_geolocation_dataset <- read.csv("model/data/olist_geolocation_dataset.csv")
################################################################################
# NÚMEROS DE LOJAS
#nlojas <- nrow(olist_sellers_dataset)
lojas <- add_count(olist_sellers_dataset)%>%
filter(n >1)
#
nlojas <- max(lojas$n)
# AVALIAÇÃO
meanAvaliacao <- mean(olist_order_reviews_dataset$review_score)
meanAvaliacao <- round(meanAvaliacao, 2)
# RECEITA
receita <- sum(category_frequency$Valor)
format_dollars(receita)
# DESPESAS
despesas <- round(600)
################################################################################
# PEGAR A FREQUÊNCIA DAS CATGORIAS E ORGANIZAR UMA TABELA POR PREÇO.
# JOIN ENTRE A TABLE_PRODUCT E TABLE_ITEMS
products <- olist_products_dataset %>%
inner_join(
olist_order_items_dataset,
by = c("product_id")
)
category_frequency <- products %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price))%>%
arrange(desc(frequencia))
################################################################################
evolucaoVendas <- products%>%
full_join(
olist_orders_dataset %>%
dplyr::select(order_id, order_purchase_timestamp),
by = c("order_id")
)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria$data <- as.Date.character(vendasCategoria$data, format = "%m/%d/%Y")
str(vendasCategoria)
as.Date.character()
View(vendasCategoria)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, format = "%m/%d/%Y")
View(vendasCategoria)
# DETERMINAR A CATEGORIA COM MELHOR DESEMPENHO DE VENDAS - APLICAR FILTRO DE DATA
# AS LOJAS PARCEIRAS COM MAIOR NÚMERO DE VENDAS E RECEITA
# AS REGIÕES QUE MAIS COMPRA. PLOTAGEM DE MAPAS
# IMPORTAR
#setwd("~/Jupiter_Analytics/model")
library(dplyr)
library(priceR)
# ORDER_ID
olist_orders_dataset <- read.csv("model/data/olist_orders_dataset.csv")
olist_order_reviews_dataset <- read.csv("model/data/olist_order_reviews_dataset.csv")
olist_order_payments_dataset <- read.csv("model/data/olist_order_payments_dataset.csv")
olist_customers_dataset <- read.csv("model/data/olist_customers_dataset.csv")
#
olist_order_items_dataset <- read.csv("model/data/olist_order_items_dataset.csv")
olist_products_dataset <- read.csv("model/data/olist_products_dataset.csv")
olist_sellers_dataset <- read.csv("model/data/olist_sellers_dataset.csv")
olist_geolocation_dataset <- read.csv("model/data/olist_geolocation_dataset.csv")
################################################################################
# NÚMEROS DE LOJAS
#nlojas <- nrow(olist_sellers_dataset)
lojas <- add_count(olist_sellers_dataset)%>%
filter(n >1)
#
nlojas <- max(lojas$n)
# AVALIAÇÃO
meanAvaliacao <- mean(olist_order_reviews_dataset$review_score)
meanAvaliacao <- round(meanAvaliacao, 2)
# RECEITA
receita <- sum(category_frequency$Valor)
format_dollars(receita)
# DESPESAS
despesas <- round(600)
################################################################################
# PEGAR A FREQUÊNCIA DAS CATGORIAS E ORGANIZAR UMA TABELA POR PREÇO.
# JOIN ENTRE A TABLE_PRODUCT E TABLE_ITEMS
products <- olist_products_dataset %>%
inner_join(
olist_order_items_dataset,
by = c("product_id")
)
category_frequency <- products %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price))%>%
arrange(desc(frequencia))
################################################################################
evolucaoVendas <- products%>%
full_join(
olist_orders_dataset %>%
dplyr::select(order_id, order_purchase_timestamp),
by = c("order_id")
)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
View(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, format = "%m/%d/%Y")
View(vendasCategoria)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data)
View(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, "%d/%m/%y")
str(vendasCategoria)
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, format =c( "%d/%m/%y"))
vendasCategoria
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
View(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, format = "%m-%d-%Y")
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, locale="en_US.UTF-8")
View(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data, locale="UTF-8")
View(vendasCategoria)
vendasCategoria$data <- as.Date(vendasCategoria$data,Sys.getlocale(category = "LC_TIME"))
View(vendasCategoria)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria$data <- as.Date(paste(vendasCategoria$data),format = "%Y %b %d" )
View(vendasCategoria)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria$data <- as.Date(paste(vendasCategoria$data),format = "%Y-%b-%d" )
View(vendasCategoria)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
vendasCategoria <- as.data.frame(vendasCategoria)
vendasCategoria$data <- as.Date(paste(vendasCategoria$data))
View(vendasCategoria)
source('run.R')
plot(vendasCategoria)
barplot(vendasCategoria$frequencia, vendasCategoria$Valor)
barplot(xlim =vendasCategoria$frequencia, ylim = vendasCategoria$Valor)
?barplot
ggplot(vendasCategoria, aes(x=vendasCategoria$product_category_name, y=vendasCategoria$frequencia)) +
geom_bar(stat = "identity")
library(ggplot2)
ggplot(vendasCategoria, aes(x=vendasCategoria$product_category_name, y=vendasCategoria$frequencia)) +
geom_bar(stat = "identity")
slice_max(vendasCategoria)
vendasCategoria%>%slice_max()
vendasCategoria%>%slice_max(n())
vendasCategoria%>%slice_max(n = 10)
vendasCategoria%>%slice_max(n = 10)
vendasCategoria%>%slice_max(n = 5)
vendasCategoria%>%slice_max(n())
vendasCategoria%>%slice_max(n(10))
vendasCategoria%>%slice_max(vendasCategoria ,n = 10)
vendasCategoria%>%slice_max(n = 10)
vendasCategoria%>%slice_max(n())
lice_max(vendasCategorias, n = 2
lice_max(vendasCategorias, n = 2)
test <- lice_max(vendasCategorias, n = 2)
test <- slice_max(vendasCategorias, n = 2)
test <- slice_max(vendasCategoria, n = 2)
vendasCategoria%>%slice_max(n = 10)
vendasCategoria%>%slice_max(n())
vendasCategoria%>%
select(product_category_name, frequencia, data)%>%
slice_max(n())
vendasCategoria%>%
select(product_category_name, frequencia, data)%>%
slice_max(vendasCategoria, n =10)
vendasCategoria%>%
select(product_category_name, frequencia, data)%>%
slice_max(product_category_name, n =10)
vendasCategoria%>%
select(product_category_name, frequencia, data)%>%
slice_max(frequencia, n =10)
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_max(Valor, n = 10)
str(vendasCategoria)
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_max(Valor, n())
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_max(Valor, n())
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_max(Valor, n= 2)
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_min(Valor, n = 2)
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_head(Valor, n = 2)
min
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_min(Valor, n = 2)
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_min(Valor, n = 10)
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_max(Valor, n = 10)
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_max(Valor, n = 1)
vendasCategoria%>%
select(product_category_name, frequencia,Valor, data)%>%
slice_max(Valor, n())
vendasCategoria%>%
slice_max(Valor, n=10)
vendasCategoria%>%slice_max(Valor, n=10)
vendasCategoria%>%slice_max(n())
vendasCategoria%>%slice_max(n(10))
vendasCategoria%>%slice_max()
vendasCategoria%>%slice_max(n = 10)
vendasCategoria%>%slice_max(Valor, n = 10)
vendasCategoria%>%slice_max(vendasCategoria$Valor, n = 10)
vendasCategoria%>%slice_gead(vendasCategoria$Valor, n = 10)
vendasCategoria%>%slice_head(vendasCategoria$Valor, n = 10)
vendasCategoria%>%slice_head(n = 10)
teste
teste <- vendasCategoria%>%slice_head(n = 10)
olist_orders_dataset <- read.csv("model/data/olist_orders_dataset.csv")
olist_order_reviews_dataset <- read.csv("model/data/olist_order_reviews_dataset.csv")
olist_order_payments_dataset <- read.csv("model/data/olist_order_payments_dataset.csv")
olist_customers_dataset <- read.csv("model/data/olist_customers_dataset.csv")
#
olist_order_items_dataset <- read.csv("model/data/olist_order_items_dataset.csv")
olist_products_dataset <- read.csv("model/data/olist_products_dataset.csv")
olist_sellers_dataset <- read.csv("model/data/olist_sellers_dataset.csv")
olist_geolocation_dataset <- read.csv("model/data/olist_geolocation_dataset.csv")
################################################################################
# NÚMEROS DE LOJAS
#nlojas <- nrow(olist_sellers_dataset)
lojas <- add_count(olist_sellers_dataset)%>%
filter(n >1)
#
nlojas <- max(lojas$n)
# AVALIAÇÃO
meanAvaliacao <- mean(olist_order_reviews_dataset$review_score)
meanAvaliacao <- round(meanAvaliacao, 2)
# RECEITA
receita <- sum(category_frequency$Valor)
format_dollars(receita)
# DESPESAS
despesas <- round(600)
################################################################################
# PEGAR A FREQUÊNCIA DAS CATGORIAS E ORGANIZAR UMA TABELA POR PREÇO.
# JOIN ENTRE A TABLE_PRODUCT E TABLE_ITEMS
products <- olist_products_dataset %>%
inner_join(
olist_order_items_dataset,
by = c("product_id")
)
category_frequency <- products %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price))%>%
arrange(desc(frequencia))
################################################################################
evolucaoVendas <- products%>%
full_join(
olist_orders_dataset %>%
dplyr::select(order_id, order_purchase_timestamp),
by = c("order_id")
)
View(evolucaoVendas)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price), data = order_purchase_timestamp)%>%
arrange(desc(frequencia))
View(vendasCategoria)
vendasCategoria <- evolucaoVendas %>%
group_by(product_category_name)%>%
summarise(frequencia = n(), Valor = sum(price))%>%
arrange(desc(frequencia))
View(vendasCategoria)
teste <- vendasCategoria%>%slice_head(n = 10)
ggplot(teste, aes(x = teste$product_category_name, y = teste$frequencia))
ggplot(teste, aes(x = teste$product_category_name, y = teste$frequencia))+
geom_bar(stat = "identity")
teste <- vendasCategoria%>%slice_head(n = 5)
ggplot(teste, aes(x = teste$product_category_name, y = teste$frequencia))+
geom_bar(stat = "identity")
